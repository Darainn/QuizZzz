{"ast":null,"code":"var _jsxFileName = \"/home/anuj/Desktop/programs/opensource/openSource-QuizZzz/src/Component/Mainpage.js\";\nimport React, { Component } from \"react\";\nimport Quiz from \"./Quiz\";\nimport Submitted from \"./Submitted\";\nimport PrintScore from \"./PrintScore\";\nimport Footer from \"./Footer\";\nimport LoadingSpinner from \"./LoadingSpinner\"; // import \"../styles/stary.css\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar i = -1;\nvar attempted = 0;\nvar TotalScore = 0;\nvar answer = [];\nexport class Mainpage extends Component {\n  constructor() {\n    super();\n\n    this.btnClicked = () => {\n      let k = 0;\n      attempted = 0;\n      TotalScore = 0;\n\n      for (k = 0; k < 10; k++) {\n        if (answer[k] === 1) TotalScore++;\n        if (answer[k] === 0 || answer[k] === 1) attempted++;\n      }\n\n      if (attempted === 10) {\n        this.setState({\n          display: 1\n        });\n      } else {\n        alert(\"attempt all the questions \");\n      }\n    };\n\n    this.state = {\n      questions: [],\n      loading: true,\n      display: 0\n    };\n  }\n\n  async componentDidMount() {\n    let url = \"https://opentdb.com/api.php?amount=10&&type=multiple\";\n    let data = await fetch(url);\n    let abc = await data.json();\n    this.setState({\n      questions: abc.results,\n      loading: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"stars\",\n        style: \"min-height: 420vh; z-index: -1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"twinkling\",\n        style: \"min-height: 420vh; z-index: -1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), this.state.loading === true && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center py-3 my-4 h1\",\n        children: [\" \", \"Welcome to Quiz Zeela\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-white\",\n        children: i = -1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: this.state.questions.map((element, index) => {\n          i++;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Quiz, {\n              indx: i,\n              question: element.question,\n              correct_answer: element.correct_answer,\n              incorrect_answers1: element.incorrect_answers[0],\n              incorrect_answers2: element.incorrect_answers[1],\n              incorrect_answers3: element.incorrect_answers[2],\n              answer: answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.btnClicked,\n            disabled: this.state.attempted < 10,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), this.state.display === 1 && /*#__PURE__*/_jsxDEV(PrintScore, {\n          score: TotalScore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-white\",\n          children: i = 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), this.state.display === 1 && this.state.questions.map((element, index) => {\n          i++;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Submitted, {\n              indx: i,\n              answer: element.correct_answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nexport default Mainpage;","map":{"version":3,"sources":["/home/anuj/Desktop/programs/opensource/openSource-QuizZzz/src/Component/Mainpage.js"],"names":["React","Component","Quiz","Submitted","PrintScore","Footer","LoadingSpinner","i","attempted","TotalScore","answer","Mainpage","constructor","btnClicked","k","setState","display","alert","state","questions","loading","componentDidMount","url","data","fetch","abc","json","results","render","index","map","element","question","correct_answer","incorrect_answers"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CACA;;;;AAEA,IAAIC,CAAC,GAAG,CAAC,CAAT;AACA,IAAIC,SAAS,GAAG,CAAhB;AACA,IAAIC,UAAU,GAAG,CAAjB;AACA,IAAIC,MAAM,GAAG,EAAb;AAEA,OAAO,MAAMC,QAAN,SAAuBV,SAAvB,CAAiC;AACtCW,EAAAA,WAAW,GAAG;AACZ;;AADY,SAoBdC,UApBc,GAoBD,MAAM;AACjB,UAAIC,CAAC,GAAG,CAAR;AACAN,MAAAA,SAAS,GAAG,CAAZ;AACAC,MAAAA,UAAU,GAAG,CAAb;;AACA,WAAKK,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;AACvB,YAAIJ,MAAM,CAACI,CAAD,CAAN,KAAc,CAAlB,EAAqBL,UAAU;AAC/B,YAAIC,MAAM,CAACI,CAAD,CAAN,KAAc,CAAd,IAAmBJ,MAAM,CAACI,CAAD,CAAN,KAAc,CAArC,EAAwCN,SAAS;AAClD;;AACD,UAAIA,SAAS,KAAK,EAAlB,EAAsB;AACpB,aAAKO,QAAL,CAAc;AACZC,UAAAA,OAAO,EAAE;AADG,SAAd;AAGD,OAJD,MAIO;AAELC,QAAAA,KAAK,CAAC,4BAAD,CAAL;AACD;AAEF,KArCa;;AAEZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,OAAO,EAAE,IAFE;AAGXJ,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD;;AAEsB,QAAjBK,iBAAiB,GAAG;AACxB,QAAIC,GAAG,GAAG,sDAAV;AACA,QAAIC,IAAI,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAtB;AACA,QAAIG,GAAG,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAhB;AAEA,SAAKX,QAAL,CAAc;AACZI,MAAAA,SAAS,EAAEM,GAAG,CAACE,OADH;AAEZP,MAAAA,OAAO,EAAE;AAFG,KAAd;AAID;;AAqBDQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BAEA;AAAK,QAAA,KAAK,EAAC,OAAX;AAAmB,QAAA,KAAK,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAK,QAAA,KAAK,EAAC,WAAX;AAAuB,QAAA,KAAK,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA;AAAK,QAAA,KAAK,EAAEC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAJA,EAOC,KAAKX,KAAL,CAAWE,OAAX,KAAuB,IAAvB,iBAA+B,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAPhC,eASE;AAAK,QAAA,SAAS,EAAC,4CAAf;AAAA,mBACG,GADH;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAcE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBAA8Bb,CAAC,GAAG,CAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACG,KAAKW,KAAL,CAAWC,SAAX,CAAqBW,GAArB,CAAyB,CAACC,OAAD,EAAUF,KAAV,KAAoB;AAC5CtB,UAAAA,CAAC;AAED,8BACE;AAAA,mCACE,QAAC,IAAD;AACE,cAAA,IAAI,EAAEA,CADR;AAEE,cAAA,QAAQ,EAAEwB,OAAO,CAACC,QAFpB;AAGE,cAAA,cAAc,EAAED,OAAO,CAACE,cAH1B;AAIE,cAAA,kBAAkB,EAAEF,OAAO,CAACG,iBAAR,CAA0B,CAA1B,CAJtB;AAKE,cAAA,kBAAkB,EAAEH,OAAO,CAACG,iBAAR,CAA0B,CAA1B,CALtB;AAME,cAAA,kBAAkB,EAAEH,OAAO,CAACG,iBAAR,CAA0B,CAA1B,CANtB;AAOE,cAAA,MAAM,EAAExB;AAPV;AAAA;AAAA;AAAA;AAAA;AADF,aAAUmB,KAAV;AAAA;AAAA;AAAA;AAAA,kBADF;AAaD,SAhBA;AADH;AAAA;AAAA;AAAA;AAAA,cAfF,eAmCE;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,+BAAf;AAAA,iCACE;AACE,YAAA,OAAO,EAAE,KAAKhB,UADhB;AAEE,YAAA,QAAQ,EAAE,KAAKK,KAAL,CAAWV,SAAX,GAAuB,EAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,EAUG,KAAKU,KAAL,CAAWF,OAAX,KAAuB,CAAvB,iBAA4B,QAAC,UAAD;AAAY,UAAA,KAAK,EAAEP;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAV/B,eAYE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBAA8BF,CAAC,GAAG;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAZF,EAaG,KAAKW,KAAL,CAAWF,OAAX,KAAuB,CAAvB,IACC,KAAKE,KAAL,CAAWC,SAAX,CAAqBW,GAArB,CAAyB,CAACC,OAAD,EAAUF,KAAV,KAAoB;AAC3CtB,UAAAA,CAAC;AAED,8BACE;AAAA,mCACE,QAAC,SAAD;AAAW,cAAA,IAAI,EAAEA,CAAjB;AAAoB,cAAA,MAAM,EAAEwB,OAAO,CAACE;AAApC;AAAA;AAAA;AAAA;AAAA;AADF,aAAUJ,KAAV;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SARD,CAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCF,eA4DE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cA5DF;AAAA,oBADF;AAiED;;AA1GqC;AA6GxC,eAAelB,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Quiz from \"./Quiz\";\r\nimport Submitted from \"./Submitted\";\r\nimport PrintScore from \"./PrintScore\";\r\nimport Footer from \"./Footer\";\r\nimport LoadingSpinner from \"./LoadingSpinner\";\r\n// import \"../styles/stary.css\"\r\n\r\nvar i = -1;\r\nvar attempted = 0;\r\nvar TotalScore = 0;\r\nvar answer = [];\r\n\r\nexport class Mainpage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      questions: [],\r\n      loading: true,\r\n      display: 0,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let url = \"https://opentdb.com/api.php?amount=10&&type=multiple\";\r\n    let data = await fetch(url);\r\n    let abc = await data.json();\r\n\r\n    this.setState({\r\n      questions: abc.results,\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  btnClicked = () => {\r\n    let k = 0;\r\n    attempted = 0;\r\n    TotalScore = 0;\r\n    for (k = 0; k < 10; k++) {\r\n      if (answer[k] === 1) TotalScore++;\r\n      if (answer[k] === 0 || answer[k] === 1) attempted++;\r\n    }\r\n    if (attempted === 10) {\r\n      this.setState({\r\n        display: 1,\r\n      });\r\n    } else {\r\n\r\n      alert(\"attempt all the questions \");\r\n    }\r\n   \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n     \r\n      <div class=\"stars\" style=\"min-height: 420vh; z-index: -1\"></div>\r\n      <div class=\"twinkling\" style=\"min-height: 420vh; z-index: -1\"></div>\r\n      <div style={index}>\r\n\r\n      </div>\r\n      {this.state.loading === true && <LoadingSpinner />}\r\n\r\n        <div className=\"d-flex justify-content-center py-3 my-4 h1\">\r\n          {\" \"}\r\n          Welcome to Quiz Zeela\r\n        </div>\r\n      \r\n        <div className=\"text-white\">{(i = -1)}</div>\r\n        <div className=\"row\">\r\n          {this.state.questions.map((element, index) => {\r\n            i++;\r\n\r\n            return (\r\n              <div key={index}>\r\n                <Quiz\r\n                  indx={i}\r\n                  question={element.question}\r\n                  correct_answer={element.correct_answer}\r\n                  incorrect_answers1={element.incorrect_answers[0]}\r\n                  incorrect_answers2={element.incorrect_answers[1]}\r\n                  incorrect_answers3={element.incorrect_answers[2]}\r\n                  answer={answer}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div>\r\n          <div className=\"d-flex justify-content-center\">\r\n            <button\r\n              onClick={this.btnClicked}\r\n              disabled={this.state.attempted < 10}\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n\r\n          {this.state.display === 1 && <PrintScore score={TotalScore} />}\r\n\r\n          <div className=\"text-white\">{(i = 0)}</div>\r\n          {this.state.display === 1 &&\r\n            this.state.questions.map((element, index) => {\r\n              i++;\r\n\r\n              return (\r\n                <div key={index}>\r\n                  <Submitted indx={i} answer={element.correct_answer} />\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n\r\n        <Footer />\r\n        \r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Mainpage;\r\n"]},"metadata":{},"sourceType":"module"}